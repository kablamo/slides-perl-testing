{"statement":[1,1,1,2,2,2,5,5,5,7,7,7,8,8,8,9,9,9,12,12,12,83,83,83,79,80,134,136,140,146,148,150,152,153,156,161,163,164,165,167,169,174,176,178,190,192,193,195,197,199,204,207,209,211,212,214,216,217,219,220,222,224,225,229,231,236,238,239,240,242,249,254,256,257,259,268,271,276,278,281,283,287,291,293,294,297,302,305,306,308,312,313,315,317,319,325,329,333,335,337,341,344,347,349,354,360,362,364,366,368,370,374,376,378,380,384,388,392,396,399,401,406,408,410,411,412,415,416,418,421,425,431,433,438,439,439,444,446,448,457,459,461,466,468,473,475,480,482,487,488,488,493,495,500,502,507,509,514,515,516,518,518,523,525,527,532,534,536,541,543,545],"digest":"5073a4d13cf8f6cdf55f4d4fdcbcd9a3","start":{"500":{"superbagof":[{"statement":153,"condition":12,"branch":37,"subroutine":30,"time":null}]},"83":{"BEGIN":[{"time":null,"subroutine":7,"branch":null,"condition":null,"statement":21}]},"541":{"builder":[{"statement":168,"branch":38,"condition":13,"subroutine":35,"time":null}]},"438":{"cmp_methods":[{"statement":133,"branch":37,"condition":12,"subroutine":22,"time":null}]},"12":{"BEGIN":[{"condition":null,"branch":null,"time":null,"subroutine":6,"statement":18}]},"360":{"wrap":[{"statement":105,"subroutine":19,"time":null,"branch":26,"condition":8}]},"487":{"cmp_set":[{"condition":12,"branch":37,"time":null,"subroutine":28,"statement":148}]},"204":{"deep_diag":[{"statement":50,"branch":2,"condition":null,"time":null,"subroutine":16}]},"1":{"BEGIN":[{"statement":null,"condition":null,"branch":null,"time":null,"subroutine":null}]},"514":{"cmp_bag":[{"statement":157,"condition":12,"branch":37,"subroutine":32,"time":null}]},"444":{"requireclass":[{"subroutine":23,"time":null,"branch":37,"condition":12,"statement":136}]},"480":{"subsetof":[{"branch":37,"condition":12,"subroutine":27,"time":null,"statement":146}]},"8":{"BEGIN":[{"subroutine":4,"time":null,"condition":null,"branch":null,"statement":12}]},"161":{"cmp_details":[{"time":null,"subroutine":13,"branch":2,"condition":null,"statement":35}]},"431":{"render_stack":[{"statement":131,"branch":37,"condition":12,"time":null,"subroutine":21}]},"473":{"supersetof":[{"condition":12,"branch":37,"subroutine":26,"time":null,"statement":144}]},"146":{"cmp_deeply":[{"condition":null,"branch":1,"subroutine":12,"time":null,"statement":29}]},"190":{"eq_deeply_cache":[{"statement":44,"condition":null,"branch":2,"time":null,"subroutine":15}]},"507":{"subbagof":[{"condition":12,"branch":37,"time":null,"subroutine":31,"statement":155}]},"466":{"set":[{"statement":142,"branch":37,"condition":12,"subroutine":25,"time":null}]},"7":{"BEGIN":[{"branch":null,"condition":null,"time":null,"subroutine":3,"statement":9}]},"174":{"eq_deeply":[{"condition":null,"branch":2,"subroutine":14,"time":null,"statement":41}]},"532":{"subhashof":[{"statement":165,"branch":38,"condition":13,"subroutine":34,"time":null}]},"493":{"bag":[{"statement":151,"branch":37,"condition":12,"subroutine":29,"time":null}]},"457":{"noclass":[{"condition":12,"branch":37,"subroutine":24,"time":null,"statement":139}]},"2":{"BEGIN":[{"statement":3,"subroutine":1,"time":null,"branch":null,"condition":null}]},"134":{"isa":[{"statement":26,"condition":null,"branch":null,"subroutine":11,"time":null}]},"254":{"render_val":[{"subroutine":17,"time":null,"branch":10,"condition":null,"statement":71}]},"523":{"superhashof":[{"statement":162,"time":null,"subroutine":33,"condition":13,"branch":38}]},"5":{"BEGIN":[{"statement":6,"subroutine":2,"time":null,"condition":null,"branch":null}]},"276":{"descend":[{"condition":null,"branch":13,"time":null,"subroutine":18,"statement":77}]},"79":{"__ANON__":[{"condition":null,"branch":null,"subroutine":8,"time":null,"statement":24},{"subroutine":9,"time":null,"branch":null,"condition":null,"statement":26},{"time":null,"subroutine":10,"branch":null,"condition":null,"statement":26},{"branch":null,"condition":null,"subroutine":null,"time":null,"statement":null}]},"9":{"BEGIN":[{"statement":15,"subroutine":5,"time":null,"condition":null,"branch":null}]},"-1":{"__COVER__":[{"condition":13,"branch":39,"subroutine":36,"time":null,"statement":171},null,null,{}]},"406":{"class_base":[{"statement":121,"branch":33,"condition":11,"time":null,"subroutine":20}]}},"subroutine":[[1,"BEGIN"],[2,"BEGIN"],[5,"BEGIN"],[7,"BEGIN"],[8,"BEGIN"],[9,"BEGIN"],[12,"BEGIN"],[83,"BEGIN"],[79,"__ANON__"],[79,"__ANON__"],[79,"__ANON__"],[134,"isa"],[146,"cmp_deeply"],[161,"cmp_details"],[174,"eq_deeply"],[190,"eq_deeply_cache"],[204,"deep_diag"],[254,"render_val"],[276,"descend"],[360,"wrap"],[406,"class_base"],[431,"render_stack"],[438,"cmp_methods"],[444,"requireclass"],[457,"noclass"],[466,"set"],[473,"supersetof"],[480,"subsetof"],[487,"cmp_set"],[493,"bag"],[500,"superbagof"],[507,"subbagof"],[514,"cmp_bag"],[523,"superhashof"],[532,"subhashof"],[541,"builder"],[79,"__ANON__"]],"condition":[[278,{"op":"or","left":"ref $d1","type":"or_3","right":"ref $d2"}],[283,{"left":"defined $d2","type":"and_3","right":"$d1 eq $d2","op":"and"}],[291,{"op":"and","left":"not $Expects","right":"&Scalar::Util::blessed($d1)","type":"and_3"}],[291,{"op":"and","right":"$d1->isa('Test::Deep::Cmp')","type":"and_3","left":"not $Expects and &Scalar::Util::blessed($d1)"}],[297,{"op":"and","right":"ref $d2","type":"and_3","left":"ref $d1"}],[302,{"left":"$Expects","type":"and_3","right":"&Scalar::Util::blessed($d1)","op":"and"}],[302,{"op":"and","right":"$d1->isa('Test::Deep::Cmp')","type":"and_3","left":"$Expects and &Scalar::Util::blessed($d1)"}],[337,{"left":"ref $d1","right":"&Scalar::Util::refaddr($d1) == $DNE_ADDR","type":"and_3","op":"and"}],[362,{"op":"and","left":"&Scalar::Util::blessed($data)","right":"$data->isa('Test::Deep::Cmp')","type":"and_3"}],[378,{"left":"$base eq 'SCALAR'","type":"or_3","right":"$base eq 'REF'","op":"or"}],[378,{"op":"or","left":"$base eq 'Regexp'","right":"$base eq 'REGEXP'","type":"or_3"}],[416,{"op":"and","right":"$reftype eq 'SCALAR'","type":"and_3","left":"$blessed eq 'Regexp'"}],[515,{"op":"||","type":"or_2","right":"''","left":"ref $_[1]"}]],"branch":[[134,{"text":"if (@_ == 1) { }"}],[150,{"text":"unless ($Test->ok($ok, $name))"}],[211,{"text":"unless $stack"}],[229,{"text":"if ($exp->can('diag_message'))"}],[222,{"text":"if ($exp->can('diagnostics')) { }"}],[220,{"text":"if (&Scalar::Util::blessed($exp))"}],[238,{"text":"unless defined $got"}],[239,{"text":"unless defined $expected"}],[240,{"text":"unless defined $message"}],[236,{"text":"unless (defined $diag)"}],[259,{"text":"&Scalar::Util::refaddr($val) eq $DNE_ADDR ? :"}],[259,{"text":"ref $val ? :"}],[257,{"text":"if (defined $val) { }"}],[283,{"text":"if defined $d2 and $d1 eq $d2"}],[287,{"text":"unless defined $d2"}],[281,{"text":"if (defined $d1) { }"}],[278,{"text":"unless (ref $d1 or ref $d2)"}],[291,{"text":"if (not $Expects and &Scalar::Util::blessed($d1) and $d1->isa('Test::Deep::Cmp'))"}],[305,{"text":"unless blessed(&Scalar::Util::blessed($d2))->descend($d1)"}],[306,{"text":"if ($d1->can('compare'))"}],[302,{"text":"if ($Expects and &Scalar::Util::blessed($d1) and $d1->isa('Test::Deep::Cmp'))"}],[315,{"text":"if ($s1 eq $s2)"}],[319,{"text":"if ($CompareCache->cmp($d1, $d2)) { }"}],[297,{"text":"if (ref $d1 and ref $d2)"}],[337,{"text":"if (ref $d1 and &Scalar::Util::refaddr($d1) == $DNE_ADDR)"}],[344,{"text":"if ($d2->descend($d1)) { }"}],[362,{"text":"if &Scalar::Util::blessed($data) and $data->isa('Test::Deep::Cmp')"}],[376,{"text":"if $WrapCache{$addr}"}],[378,{"text":"if ($base eq 'ARRAY') { }"}],[378,{"text":"elsif ($base eq 'HASH') { }"}],[378,{"text":"elsif ($base eq 'SCALAR' or $base eq 'REF') { }"}],[378,{"text":"elsif ($base eq 'Regexp' or $base eq 'REGEXP') { }"}],[368,{"text":"if ($base eq '') { }"}],[411,{"text":"defined $blessed ? :"}],[416,{"text":"if ($blessed eq 'Regexp' and $reftype eq 'SCALAR')"}],[415,{"text":"if ($Test::Deep::RegexpVersion::OldStyle)"}],[408,{"text":"if (ref $val) { }"}],[516,{"text":"unless $ref eq 'ARRAY'"}],[541,{"text":"if (@_)"}]],"file":"local/lib/perl5/Test/Deep.pm"}